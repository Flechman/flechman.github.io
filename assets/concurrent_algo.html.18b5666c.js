const e={key:"v-103381d9",path:"/notes/concurrent_algo/concurrent_algo.html",title:"Concurrent Algorithms",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"1. Introduction",slug:"_1-introduction",children:[]},{level:2,title:"2. Implementing Registers",slug:"_2-implementing-registers",children:[{level:3,title:"2.1 Assumptions & Vocabulary",slug:"_2-1-assumptions-vocabulary",children:[]},{level:3,title:"2.2 Binary SRSW Safe -> Binary MRSW Safe",slug:"_2-2-binary-srsw-safe-binary-mrsw-safe",children:[]},{level:3,title:"2.3 Binary MRSW Safe -> Binary MRSW Regular",slug:"_2-3-binary-mrsw-safe-binary-mrsw-regular",children:[]},{level:3,title:"2.4 Binary MRSW Regular -> M-Valued MRSW Regular",slug:"_2-4-binary-mrsw-regular-m-valued-mrsw-regular",children:[]},{level:3,title:"2.5 M-Valued SRSW Regular -> M-Valued SRSW Atomic",slug:"_2-5-m-valued-srsw-regular-m-valued-srsw-atomic",children:[]},{level:3,title:"2.6 M-Valued SRSW Atomic -> M-Valued MRSW Atomic",slug:"_2-6-m-valued-srsw-atomic-m-valued-mrsw-atomic",children:[]},{level:3,title:"2.7 M-Valued MRSW Atomic -> M-Valued MRMW Atomic",slug:"_2-7-m-valued-mrsw-atomic-m-valued-mrmw-atomic",children:[]}]},{level:2,title:"3. The Power of Registers",slug:"_3-the-power-of-registers",children:[{level:3,title:"3.1 Counter",slug:"_3-1-counter",children:[]},{level:3,title:"3.2 Snapshot",slug:"_3-2-snapshot",children:[]}]},{level:2,title:"4. The Limitations of Registers",slug:"_4-the-limitations-of-registers",children:[{level:3,title:"4.1 Impossibility of Consensus",slug:"_4-1-impossibility-of-consensus",children:[]},{level:3,title:"4.2 Fetch&Inc",slug:"_4-2-fetch-inc",children:[]},{level:3,title:"4.3 Queue",slug:"_4-3-queue",children:[]},{level:3,title:"4.4 Test&Set",slug:"_4-4-test-set",children:[]},{level:3,title:"4.5 Compare&Swap",slug:"_4-5-compare-swap",children:[]}]},{level:2,title:"5. Universal Construction",slug:"_5-universal-construction",children:[{level:3,title:"5.1 Deterministic case",slug:"_5-1-deterministic-case",children:[]},{level:3,title:"5.2 General (Deterministic and Non-Deterministic) Case",slug:"_5-2-general-deterministic-and-non-deterministic-case",children:[]}]},{level:2,title:"6. Implementing the Consensus Object with Timing Assumptions",slug:"_6-implementing-the-consensus-object-with-timing-assumptions",children:[{level:3,title:"6.1 O-Consensus",slug:"_6-1-o-consensus",children:[]},{level:3,title:"6.2 L-Consensus",slug:"_6-2-l-consensus",children:[]},{level:3,title:"6.3 Consensus",slug:"_6-3-consensus",children:[]},{level:3,title:"6.4 <>Leader",slug:"_6-4-leader",children:[]}]},{level:2,title:"7. Transactional memory",slug:"_7-transactional-memory",children:[{level:3,title:"7.1 Two-Phase Locking",slug:"_7-1-two-phase-locking",children:[]},{level:3,title:"7.2 Two-Phase Locking with Invisible Reads",slug:"_7-2-two-phase-locking-with-invisible-reads",children:[]},{level:3,title:"7.3 DSTM",slug:"_7-3-dstm",children:[]}]},{level:2,title:"8. Anonymous Concurrent Computing",slug:"_8-anonymous-concurrent-computing",children:[{level:3,title:"8.1 Weak Counter",slug:"_8-1-weak-counter",children:[]},{level:3,title:"8.2 General Snapshot",slug:"_8-2-general-snapshot",children:[]},{level:3,title:"8.3 Binary O-Consensus",slug:"_8-3-binary-o-consensus",children:[]}]}],git:{updatedTime:1680256507e3},filePathRelative:"notes/concurrent_algo/concurrent_algo.md"};export{e as data};
